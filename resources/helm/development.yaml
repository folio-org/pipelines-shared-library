edge-caiasoft:
  ingress:
    enabled: true
    annotations:
      alb.ingress.kubernetes.io/healthcheck-path: /admin/health
      alb.ingress.kubernetes.io/listen-ports: '[{"HTTPS":443}]'
      alb.ingress.kubernetes.io/load-balancer-attributes: idle_timeout.timeout_seconds=4000
      alb.ingress.kubernetes.io/scheme: internet-facing
      alb.ingress.kubernetes.io/success-codes: 200-399
      kubernetes.io/ingress.class: alb
    hosts:
    - paths:
      - path: /caiasoftService*
        pathType: ImplementationSpecific
        servicePort: 80
  service:
    type: NodePort
  extraEnvVars: []
  integrations:
    okapi:
      enabled: true
      existingSecret: okapi-credentials
  configMaps:
    ephemeral:
      fileName: edge-caiasoft-ephemeral-properties
      existingConfig: edge-caiasoft-ephemeral-properties
  replicaCount: 1
  resources:
    limits:
      memory: 512Mi
    requests:
      memory: 448Mi
edge-connexion:
  service:
    annotations:
      service.beta.kubernetes.io/aws-load-balancer-nlb-target-type: ip
      service.beta.kubernetes.io/aws-load-balancer-scheme: internet-facing
      service.beta.kubernetes.io/aws-load-balancer-type: external
    type: LoadBalancer
  extraEnvVars: []
  integrations:
    okapi:
      enabled: true
      existingSecret: okapi-credentials
  configMaps:
    ephemeral:
      fileName: edge-connexion-ephemeral-properties
      existingConfig: edge-connexion-ephemeral-properties
  replicaCount: 1
  resources:
    limits:
      memory: 512Mi
    requests:
      memory: 448Mi
edge-courses:
  ingress:
    enabled: true
    annotations:
      alb.ingress.kubernetes.io/healthcheck-path: /admin/health
      alb.ingress.kubernetes.io/listen-ports: '[{"HTTPS":443}]'
      alb.ingress.kubernetes.io/load-balancer-attributes: idle_timeout.timeout_seconds=4000
      alb.ingress.kubernetes.io/scheme: internet-facing
      alb.ingress.kubernetes.io/success-codes: 200-399
      kubernetes.io/ingress.class: alb
    hosts:
    - paths:
      - path: /courses*
        pathType: ImplementationSpecific
        servicePort: 80
  service:
    type: NodePort
  extraEnvVars:
  - name: secure_store
    value: Ephemeral
  - name: token_cache_ttl_ms
    value: '3600000'
  - name: null_token_cache_ttl_ms
    value: '30000'
  - name: token_cache_capacity
    value: '100'
  integrations:
    okapi:
      enabled: true
      existingSecret: okapi-credentials
  configMaps:
    ephemeral:
      fileName: edge-courses-ephemeral-properties
      existingConfig: edge-courses-ephemeral-properties
  replicaCount: 1
  resources:
    limits:
      memory: 512Mi
    requests:
      memory: 448Mi
edge-dcb:
  ingress:
    enabled: true
    annotations:
      alb.ingress.kubernetes.io/healthcheck-path: /admin/health
      alb.ingress.kubernetes.io/listen-ports: '[{"HTTPS":443}]'
      alb.ingress.kubernetes.io/load-balancer-attributes: idle_timeout.timeout_seconds=4000
      alb.ingress.kubernetes.io/scheme: internet-facing
      alb.ingress.kubernetes.io/success-codes: 200-399
      kubernetes.io/ingress.class: alb
    hosts:
    - paths:
      - path: /dcbService*
        pathType: ImplementationSpecific
        servicePort: 80
  service:
    type: NodePort
  extraEnvVars: []
  integrations:
    okapi:
      enabled: true
      existingSecret: okapi-credentials
  configMaps:
    ephemeral:
      fileName: edge-dcb-ephemeral-properties
      existingConfig: edge-dcb-ephemeral-properties
  replicaCount: 1
  resources:
    limits:
      memory: 512Mi
    requests:
      memory: 448Mi
edge-dematic:
  ingress:
    enabled: true
    annotations:
      alb.ingress.kubernetes.io/healthcheck-path: /admin/health
      alb.ingress.kubernetes.io/listen-ports: '[{"HTTPS":443}]'
      alb.ingress.kubernetes.io/load-balancer-attributes: idle_timeout.timeout_seconds=4000
      alb.ingress.kubernetes.io/scheme: internet-facing
      alb.ingress.kubernetes.io/success-codes: 200-399
      kubernetes.io/ingress.class: alb
    hosts:
    - paths:
      - path: /asrService*
        pathType: ImplementationSpecific
        servicePort: 80
  service:
    type: NodePort
  extraEnvVars: []
  integrations:
    okapi:
      enabled: true
      existingSecret: okapi-credentials
  configMaps:
    ephemeral:
      fileName: edge-dematic-ephemeral-properties
      existingConfig: edge-dematic-ephemeral-properties
  replicaCount: 1
  resources:
    limits:
      memory: 512Mi
    requests:
      memory: 448Mi
edge-fqm:
  ingress:
    enabled: true
    annotations:
      alb.ingress.kubernetes.io/healthcheck-path: /admin/health
      alb.ingress.kubernetes.io/listen-ports: '[{"HTTPS":443}]'
      alb.ingress.kubernetes.io/load-balancer-attributes: idle_timeout.timeout_seconds=4000
      alb.ingress.kubernetes.io/scheme: internet-facing
      alb.ingress.kubernetes.io/success-codes: 200-399
      kubernetes.io/ingress.class: alb
    hosts:
    - paths:
      - path: /query*
        pathType: ImplementationSpecific
        servicePort: 80
      - path: /entity-types*
        pathType: ImplementationSpecific
        servicePort: 80
  service:
    type: NodePort
  extraEnvVars:
  - name: secure_store
    value: Ephemeral
  integrations:
    okapi:
      enabled: true
      existingSecret: okapi-credentials
  configMaps:
    ephemeral:
      fileName: edge-fqm-ephemeral-properties
      existingConfig: edge-fqm-ephemeral-properties
  replicaCount: 1
  resources:
    limits:
      memory: 269Mi
    requests:
      memory: 179Mi
edge-inn-reach:
  ingress:
    enabled: true
    annotations:
      alb.ingress.kubernetes.io/healthcheck-path: /admin/health
      alb.ingress.kubernetes.io/listen-ports: '[{"HTTPS":443}]'
      alb.ingress.kubernetes.io/load-balancer-attributes: idle_timeout.timeout_seconds=4000
      alb.ingress.kubernetes.io/scheme: internet-facing
      alb.ingress.kubernetes.io/success-codes: 200-399
      kubernetes.io/ingress.class: alb
    hosts:
    - paths:
      - path: /innreach*
        pathType: ImplementationSpecific
        servicePort: 80
  service:
    type: NodePort
  extraEnvVars: []
  integrations:
    okapi:
      enabled: true
      existingSecret: okapi-credentials
  configMaps:
    ephemeral:
      fileName: edge-inn-reach-ephemeral-properties
      existingConfig: edge-inn-reach-ephemeral-properties
  replicaCount: 1
  resources:
    limits:
      memory: 512Mi
    requests:
      memory: 448Mi
edge-ncip:
  ingress:
    enabled: true
    annotations:
      alb.ingress.kubernetes.io/healthcheck-path: /admin/health
      alb.ingress.kubernetes.io/listen-ports: '[{"HTTPS":443}]'
      alb.ingress.kubernetes.io/load-balancer-attributes: idle_timeout.timeout_seconds=4000
      alb.ingress.kubernetes.io/scheme: internet-facing
      alb.ingress.kubernetes.io/success-codes: 200-399
      kubernetes.io/ingress.class: alb
    hosts:
    - paths:
      - path: /ncip*
        pathType: ImplementationSpecific
        servicePort: 80
  service:
    type: NodePort
  extraEnvVars: []
  integrations:
    okapi:
      enabled: true
      existingSecret: okapi-credentials
  configMaps:
    ephemeral:
      fileName: edge-ncip-ephemeral-properties
      existingConfig: edge-ncip-ephemeral-properties
  replicaCount: 1
  resources:
    limits:
      memory: 512Mi
    requests:
      memory: 448Mi
edge-oai-pmh:
  ingress:
    enabled: true
    annotations:
      alb.ingress.kubernetes.io/healthcheck-path: /admin/health
      alb.ingress.kubernetes.io/listen-ports: '[{"HTTPS":443}]'
      alb.ingress.kubernetes.io/load-balancer-attributes: idle_timeout.timeout_seconds=4000
      alb.ingress.kubernetes.io/scheme: internet-facing
      alb.ingress.kubernetes.io/success-codes: 200-399
      kubernetes.io/ingress.class: alb
    hosts:
    - paths:
      - path: /oai*
        pathType: ImplementationSpecific
        servicePort: 80
  service:
    type: NodePort
  extraEnvVars: []
  integrations:
    okapi:
      enabled: true
      existingSecret: okapi-credentials
  configMaps:
    ephemeral:
      fileName: edge-oai-pmh-ephemeral-properties
      existingConfig: edge-oai-pmh-ephemeral-properties
  replicaCount: 1
  resources:
    limits:
      memory: 756Mi
    requests:
      memory: 680Mi
edge-orders:
  ingress:
    enabled: true
    annotations:
      alb.ingress.kubernetes.io/healthcheck-path: /admin/health
      alb.ingress.kubernetes.io/listen-ports: '[{"HTTPS":443}]'
      alb.ingress.kubernetes.io/load-balancer-attributes: idle_timeout.timeout_seconds=4000
      alb.ingress.kubernetes.io/scheme: internet-facing
      alb.ingress.kubernetes.io/success-codes: 200-399
      kubernetes.io/ingress.class: alb
    hosts:
    - paths:
      - path: /orders*
        pathType: ImplementationSpecific
        servicePort: 80
  service:
    type: NodePort
  extraEnvVars: []
  integrations:
    okapi:
      enabled: true
      existingSecret: okapi-credentials
  configMaps:
    ephemeral:
      fileName: edge-orders-ephemeral-properties
      existingConfig: edge-orders-ephemeral-properties
  replicaCount: 1
  resources:
    limits:
      memory: 512Mi
    requests:
      memory: 448Mi
edge-patron:
  ingress:
    enabled: true
    annotations:
      alb.ingress.kubernetes.io/healthcheck-path: /admin/health
      alb.ingress.kubernetes.io/listen-ports: '[{"HTTPS":443}]'
      alb.ingress.kubernetes.io/load-balancer-attributes: idle_timeout.timeout_seconds=4000
      alb.ingress.kubernetes.io/scheme: internet-facing
      alb.ingress.kubernetes.io/success-codes: 200-399
      kubernetes.io/ingress.class: alb
    hosts:
    - paths:
      - path: /patron*
        pathType: ImplementationSpecific
        servicePort: 80
  service:
    type: NodePort
  extraEnvVars: []
  integrations:
    okapi:
      enabled: true
      existingSecret: okapi-credentials
  configMaps:
    ephemeral:
      fileName: edge-patron-ephemeral-properties
      existingConfig: edge-patron-ephemeral-properties
  replicaCount: 1
  resources:
    limits:
      memory: 512Mi
    requests:
      memory: 448Mi
edge-rtac:
  ingress:
    enabled: true
    annotations:
      alb.ingress.kubernetes.io/healthcheck-path: /admin/health
      alb.ingress.kubernetes.io/listen-ports: '[{"HTTPS":443}]'
      alb.ingress.kubernetes.io/load-balancer-attributes: idle_timeout.timeout_seconds=4000
      alb.ingress.kubernetes.io/scheme: internet-facing
      alb.ingress.kubernetes.io/success-codes: 200-399
      kubernetes.io/ingress.class: alb
    hosts:
    - paths:
      - path: /*rtac*
        pathType: ImplementationSpecific
        servicePort: 80
  service:
    type: NodePort
  extraEnvVars: []
  integrations:
    okapi:
      enabled: true
      existingSecret: okapi-credentials
  configMaps:
    ephemeral:
      fileName: edge-rtac-ephemeral-properties
      existingConfig: edge-rtac-ephemeral-properties
  replicaCount: 1
  resources:
    limits:
      memory: 512Mi
    requests:
      memory: 448Mi
edge-sip2:
  service:
    annotations:
      service.beta.kubernetes.io/aws-load-balancer-nlb-target-type: ip
      service.beta.kubernetes.io/aws-load-balancer-scheme: internet-facing
      service.beta.kubernetes.io/aws-load-balancer-type: external
    type: LoadBalancer
  extraEnvVars: []
  integrations: {}
  configMaps:
    ephemeral:
      fileName: edge-sip2-ephemeral-properties
      existingConfig: edge-sip2-ephemeral-properties
  replicaCount: 1
  resources:
    limits:
      memory: 512Mi
    requests:
      memory: 448Mi
mod-aes:
  extraEnvVars: []
  integrations: {}
  replicaCount: 1
  resources:
    limits:
      memory: 480Mi
    requests:
      memory: 384Mi
mod-agreements:
  extraEnvVars:
  - name: DB_MAXPOOLSIZE
    value: '50'
  - name: CONCURRENT_JOBS_GLOBAL
    value: '5'
  integrations:
    db:
      enabled: true
      existingSecret: db-credentials
  replicaCount: 1
  resources:
    limits:
      memory: 1792Mi
    requests:
      memory: 1536Mi
mod-audit:
  extraEnvVars: []
  integrations:
    db:
      enabled: true
      existingSecret: db-credentials
    kafka:
      enabled: true
      existingSecret: kafka-credentials
  replicaCount: 1
  resources:
    limits:
      memory: 512Mi
    requests:
      memory: 448Mi
mod-authtoken:
  extraEnvVars: []
  extraJavaOpts:
  - -Dallow.cross.tenant.requests=true
  integrations:
    okapi:
      enabled: true
      existingSecret: okapi-credentials
    db:
      enabled: true
      existingSecret: db-credentials
  replicaCount: 1
  resources:
    limits:
      memory: 512Mi
    requests:
      memory: 448Mi
mod-batch-print:
  extraEnvVars: []
  integrations:
    db:
      enabled: true
      existingSecret: db-credentials
  replicaCount: 1
  resources:
    limits:
      memory: 512Mi
    requests:
      memory: 448Mi
mod-bulk-operations:
  extraEnvVars:
  - name: MAX_UPLOADING_RETRIES
    value: '50'
  integrations:
    db:
      enabled: true
      existingSecret: db-credentials
    kafka:
      enabled: true
      existingSecret: kafka-credentials
    s3:
      enabled: true
      existingSecret: s3-mod-bulk-operations-credentials
  replicaCount: 1
  resources:
    limits:
      memory: 1536Mi
    requests:
      memory: 1300Mi
mod-calendar:
  extraEnvVars: []
  integrations:
    db:
      enabled: true
      existingSecret: db-credentials
  replicaCount: 1
  resources:
    limits:
      memory: 447Mi
    requests:
      memory: 298Mi
mod-camunda:
  extraEnvVars: []
  integrations:
    db:
      enabled: true
      existingSecret: db-credentials
    okapi:
      enabled: true
      existingSecret: okapi-credentials
  replicaCount: 1
  resources:
    limits:
      memory: 512Mi
    requests:
      memory: 400Mi
mod-circulation:
  extraEnvVars:
  - name: SCHEDULED_ANONYMIZATION_NUMBER_OF_LOANS_TO_CHECK
    value: '50000'
  - name: REPLICATION_FACTOR
    value: '1'
  integrations:
    kafka:
      enabled: true
      existingSecret: kafka-credentials
    okapi:
      enabled: true
      existingSecret: okapi-credentials
  replicaCount: 1
  resources:
    limits:
      memory: 512Mi
    requests:
      memory: 448Mi
mod-circulation-bff:
  extraEnvVars: []
  integrations:
    okapi:
      enabled: true
      existingSecret: okapi-credentials
  replicaCount: 1
  resources:
  limits:
    memory: 512Mi
  requests:
    memory: 384Mi
mod-circulation-storage:
  extraEnvVars:
  - name: REPLICATION_FACTOR
    value: '1'
  integrations:
    db:
      enabled: true
      existingSecret: db-credentials
    kafka:
      enabled: true
      existingSecret: kafka-credentials
  replicaCount: 1
  resources:
    limits:
      memory: 768Mi
    requests:
      memory: 720Mi
mod-codex-ekb:
  extraEnvVars: []
  integrations: {}
  replicaCount: 1
  resources:
    limits:
      memory: 427Mi
    requests:
      memory: 341Mi
mod-codex-inventory:
  extraEnvVars: []
  integrations: {}
  replicaCount: 1
  resources:
    limits:
      memory: 427Mi
    requests:
      memory: 341Mi
mod-codex-mux:
  extraEnvVars: []
  integrations: {}
  replicaCount: 1
  resources:
    limits:
      memory: 427Mi
    requests:
      memory: 341Mi
mod-configuration:
  extraEnvVars: []
  integrations:
    db:
      enabled: true
      existingSecret: db-credentials
  replicaCount: 1
  resources:
    limits:
      memory: 512Mi
    requests:
      memory: 448Mi
mod-consortia:
  extraEnvVars: []
  integrations:
    db:
      enabled: true
      existingSecret: db-credentials
    kafka:
      enabled: true
      existingSecret: kafka-credentials
    okapi:
      enabled: true
      existingSecret: okapi-credentials
    systemuser:
      enabled: true
      existingSecret: mod-consortia-systemuser
  replicaCount: 1
  resources:
    limits:
      memory: 512Mi
    requests:
      memory: 448Mi
mod-copycat:
  extraEnvVars: []
  integrations:
    db:
      enabled: true
      existingSecret: db-credentials
  replicaCount: 1
  resources:
    limits:
      memory: 512Mi
    requests:
      memory: 448Mi
mod-courses:
  extraEnvVars: []
  integrations:
    db:
      enabled: true
      existingSecret: db-credentials
  replicaCount: 1
  resources:
    limits:
      memory: 512Mi
    requests:
      memory: 448Mi
mod-data-export:
  extraEnvVars: []
  integrations:
    db:
      enabled: true
      existingSecret: db-credentials
    s3:
      enabled: true
      existingSecret: s3-mod-data-export-credentials
    okapi:
      enabled: true
      existingSecret: okapi-credentials
  replicaCount: 1
  resources:
    limits:
      memory: 1024Mi
    requests:
      memory: 922Mi
mod-data-export-spring:
  extraEnvVars: []
  integrations:
    db:
      enabled: true
      existingSecret: db-credentials
    kafka:
      enabled: true
      existingSecret: kafka-credentials
    okapi:
      enabled: true
      existingSecret: okapi-credentials
    systemuser:
      enabled: true
      existingSecret: mod-data-export-spring-systemuser
  replicaCount: 1
  resources:
    limits:
      memory: 1024Mi
    requests:
      memory: 922Mi
mod-data-export-worker:
  extraEnvVars: []
  integrations:
    db:
      enabled: true
      existingSecret: db-credentials
    kafka:
      enabled: true
      existingSecret: kafka-credentials
    s3:
      enabled: true
      existingSecret: s3-mod-data-export-worker-credentials
  replicaCount: 1
  resources:
    limits:
      memory: 1536Mi
    requests:
      memory: 1300Mi
mod-data-import:
  extraEnvVars:
  - name: S3_FORCEPATHSTYLE
    value: 'true'
  integrations:
    db:
      enabled: true
      existingSecret: db-credentials
    kafka:
      enabled: true
      existingSecret: kafka-credentials
    s3:
      enabled: true
      existingSecret: s3-mod-data-import-credentials
    okapi:
      enabled: true
      existingSecret: okapi-credentials
  replicaCount: 1
  resources:
    limits:
      memory: 1024Mi
    requests:
      memory: 922Mi
mod-di-converter-storage:
  extraEnvVars: []
  integrations:
    db:
      enabled: true
      existingSecret: db-credentials
  replicaCount: 1
  resources:
    limits:
      memory: 512Mi
    requests:
      memory: 448Mi
mod-ebsconet:
  extraEnvVars: []
  integrations: {}
  replicaCount: 1
  resources:
    limits:
      memory: 624Mi
    requests:
      memory: 512Mi
mod-email:
  extraEnvVars: []
  integrations:
    db:
      enabled: true
      existingSecret: db-credentials
  replicaCount: 1
  resources:
    limits:
      memory: 512Mi
    requests:
      memory: 448Mi
mod-entities-links:
  extraEnvVars:
  - name: INSTANCE_STORAGE_QUERY_BATCH_SIZE
    value: '50'
  - name: AUTHORITY_ARCHIVES_EXPIRATION_PERIOD
    value: '7'
  - name: KAFKA_INSTANCE_AUTHORITY_TOPIC_PARTITIONS
    value: '2'
  - name: KAFKA_INSTANCE_AUTHORITY_STATS_TOPIC_PARTITIONS
    value: '2'
  integrations:
    db:
      enabled: true
      existingSecret: db-credentials
    kafka:
      enabled: true
      existingSecret: kafka-credentials
    okapi:
      enabled: true
      existingSecret: okapi-credentials
    systemuser:
      enabled: true
      existingSecret: mod-entities-links-systemuser
    s3:
      enabled: true
      existingSecret: s3-mod-marc-migrations-credentials
  replicaCount: 1
  resources:
    limits:
      memory: 1296Mi
    requests:
      memory: 1240Mi
mod-erm-usage:
  extraEnvVars: []
  integrations:
    db:
      enabled: true
      existingSecret: db-credentials
  replicaCount: 1
  resources:
    limits:
      memory: 512Mi
    requests:
      memory: 448Mi
mod-erm-usage-harvester:
  extraEnvVars: []
  integrations:
    db:
      enabled: true
      existingSecret: db-credentials
    okapi:
      enabled: true
      existingSecret: okapi-credentials
    systemuser:
      enabled: true
      existingSecret: mod-erm-usage-harvester-systemuser
  replicaCount: 1
  resources:
    limits:
      memory: 512Mi
    requests:
      memory: 448Mi
mod-eusage-reports:
  extraEnvVars: []
  integrations:
    db:
      enabled: true
      existingSecret: db-credentials
  replicaCount: 1
  resources:
    limits:
      memory: 512Mi
    requests:
      memory: 448Mi
mod-event-config:
  extraEnvVars: []
  integrations:
    db:
      enabled: true
      existingSecret: db-credentials
  replicaCount: 1
  resources:
    limits:
      memory: 512Mi
    requests:
      memory: 448Mi
mod-feesfines:
  extraEnvVars: []
  integrations:
    db:
      enabled: true
      existingSecret: db-credentials
  replicaCount: 1
  resources:
    limits:
      memory: 512Mi
    requests:
      memory: 448Mi
mod-finance:
  extraEnvVars: []
  integrations: {}
  replicaCount: 1
  resources:
    limits:
      memory: 512Mi
    requests:
      memory: 448Mi
mod-finance-storage:
  extraEnvVars: []
  integrations:
    db:
      enabled: true
      existingSecret: db-credentials
  replicaCount: 1
  resources:
    limits:
      memory: 512Mi
    requests:
      memory: 448Mi
mod-fqm-manager:
  extraEnvVars:
  - name: QUERY_RETENTION_DURATION
    value: 3h
  - name: task.execution.pool.max-size
    value: '10'
  integrations:
    db:
      enabled: true
      existingSecret: db-credentials
  replicaCount: 1
  resources:
    limits:
      memory: 1500Mi
    requests:
      memory: 1300Mi
mod-gobi:
  extraEnvVars: []
  integrations: {}
  replicaCount: 1
  resources:
    limits:
      memory: 512Mi
    requests:
      memory: 448Mi
mod-graphql:
  extraEnvVars: []
  integrations: {}
  replicaCount: 1
  resources:
    limits:
      memory: 512Mi
    requests:
      memory: 448Mi
mod-inn-reach:
  extraEnvVars:
  - name: INNREACH_TENANTS
    value: diku|fs09000000|consortium|college|university
  integrations:
    db:
      enabled: true
      existingSecret: db-credentials
    kafka:
      enabled: true
      existingSecret: kafka-credentials
    okapi:
      enabled: true
      existingSecret: okapi-credentials
    systemuser:
      enabled: true
      existingSecret: mod-inn-reach-systemuser
  replicaCount: 1
  resources:
    limits:
      memory: 512Mi
    requests:
      memory: 448Mi
mod-inventory:
  extraEnvVars: []
  integrations:
    db:
      enabled: true
      existingSecret: db-credentials
    kafka:
      enabled: true
      existingSecret: kafka-credentials
  replicaCount: 1
  resources:
    limits:
      memory: 2048Mi
    requests:
      memory: 1844Mi
mod-inventory-storage:
  extraEnvVars:
  - name: REPLICATION_FACTOR
    value: '1'
  - name: KAFKA_DOMAIN_TOPIC_NUM_PARTITIONS
    value: '2'
  integrations:
    db:
      enabled: true
      existingSecret: db-credentials
    kafka:
      enabled: true
      existingSecret: kafka-credentials
  replicaCount: 1
  resources:
    limits:
      memory: 1104Mi
    requests:
      memory: 976Mi
mod-inventory-update:
  extraEnvVars: []
  integrations: {}
  replicaCount: 1
  resources:
    limits:
      memory: 512Mi
    requests:
      memory: 448Mi
mod-invoice:
  extraEnvVars:
  - name: dataimport.consumer.verticle.mandatory
    value: 'false'
  - name: dataimport.max-active-threads
    value: '1'
  integrations:
    db:
      enabled: true
      existingSecret: db-credentials
    kafka:
      enabled: true
      existingSecret: kafka-credentials
  replicaCount: 1
  resources:
    limits:
      memory: 720Mi
    requests:
      memory: 576Mi
mod-invoice-storage:
  extraEnvVars: []
  integrations:
    db:
      enabled: true
      existingSecret: db-credentials
  replicaCount: 1
  resources:
    limits:
      memory: 512Mi
    requests:
      memory: 448Mi
mod-kb-ebsco-java:
  extraEnvVars: []
  integrations:
    db:
      enabled: true
      existingSecret: db-credentials
  replicaCount: 1
  resources:
    limits:
      memory: 512Mi
    requests:
      memory: 448Mi
mod-ldp:
  extraEnvVars: []
  integrations:
    db:
      enabled: true
      existingSecret: db-credentials
  replicaCount: 1
  resources:
    limits:
      memory: 512Mi
    requests:
      memory: 448Mi
mod-licenses:
  extraEnvVars: []
  integrations:
    db:
      enabled: true
      existingSecret: db-credentials
  replicaCount: 1
  resources:
    limits:
      memory: 1240Mi
    requests:
      memory: 1156Mi
mod-lists:
  extraEnvVars:
  - name: MAX_LIST_SIZE
    value: '1250000'
  - name: LIST_EXPORT_BATCH_SIZE
    value: '1000'
  - name: spring.task.execution.pool.max-size
    value: '10'
  integrations:
    db:
      enabled: true
      existingSecret: db-credentials
    s3:
      enabled: true
      existingSecret: s3-mod-lists-credentials
    okapi:
      enabled: true
      existingSecret: okapi-credentials
    systemuser:
      enabled: true
      existingSecret: mod-lists
  replicaCount: 1
  resources:
    limits:
      memory: 1500Mi
    requests:
      memory: 1300Mi
mod-login:
  extraEnvVars: []
  integrations:
    db:
      enabled: true
      existingSecret: db-credentials
  replicaCount: 1
  resources:
    limits:
      memory: 720Mi
    requests:
      memory: 649Mi
mod-login-saml:
  extraEnvVars: []
  integrations: {}
  replicaCount: 1
  resources:
    limits:
      memory: 512Mi
    requests:
      memory: 448Mi
mod-marc-migrations:
  extraEnvVars: []
  integrations:
    db:
      enabled: true
      existingSecret: db-credentials
    okapi:
      enabled: true
      existingSecret: okapi-credentials
    s3:
      enabled: true
      existingSecret: s3-mod-marc-migrations-credentials
  replicaCount: 1
  resources:
    limits:
      memory: 456Mi
    requests:
      memory: 304Mi
mod-marccat:
  extraEnvVars: []
  integrations:
    db:
      enabled: true
      existingSecret: db-credentials
  replicaCount: 1
  resources:
    limits:
      memory: 1040Mi
    requests:
      memory: 832Mi
mod-ncip:
  extraEnvVars: []
  integrations: {}
  replicaCount: 1
  resources:
    limits:
      memory: 512Mi
    requests:
      memory: 448Mi
mod-notes:
  extraEnvVars: []
  integrations:
    db:
      enabled: true
      existingSecret: db-credentials
  replicaCount: 1
  resources:
    limits:
      memory: 512Mi
    requests:
      memory: 448Mi
mod-notify:
  extraEnvVars: []
  integrations:
    db:
      enabled: true
      existingSecret: db-credentials
  replicaCount: 1
  resources:
    limits:
      memory: 512Mi
    requests:
      memory: 448Mi
mod-oa:
  extraEnvVars: []
  integrations:
    db:
      enabled: true
      existingSecret: db-credentials
  replicaCount: 1
  resources:
    limits:
      memory: 936Mi
    requests:
      memory: 624Mi
mod-oai-pmh:
  extraEnvVars:
  - name: CLEAN_UP_ERROR_LOGS_INTERVAL
    value: '30'
  integrations:
    db:
      enabled: true
      existingSecret: db-credentials
    s3:
      enabled: true
      existingSecret: s3-mod-oai-pmh-credentials
  replicaCount: 1
  resources:
    limits:
      memory: 1536Mi
    requests:
      memory: 1383Mi
mod-orders:
  extraEnvVars: []
  integrations:
    db:
      enabled: true
      existingSecret: db-credentials
    kafka:
      enabled: true
      existingSecret: kafka-credentials
  replicaCount: 1
  resources:
    limits:
      memory: 1024Mi
    requests:
      memory: 720Mi
mod-orders-storage:
  extraEnvVars:
  - name: consumer.verticle.mandatory
    value: 'false'
  integrations:
    db:
      enabled: true
      existingSecret: db-credentials
    kafka:
      enabled: true
      existingSecret: kafka-credentials
  replicaCount: 1
  resources:
    limits:
      memory: 512Mi
    requests:
      memory: 448Mi
mod-dcb:
  extraEnvVars:
  - name: consumer.verticle.mandatory
    value: 'false'
  integrations:
    db:
      enabled: true
      existingSecret: db-credentials
    kafka:
      enabled: true
      existingSecret: kafka-credentials
    systemuser:
      enabled: true
      existingSecret: mod-dcb-systemuser
  replicaCount: 1
  resources:
    limits:
      memory: 512Mi
    requests:
      memory: 448Mi
mod-circulation-item:
  extraEnvVars:
  - name: consumer.verticle.mandatory
    value: 'false'
  integrations:
    db:
      enabled: true
      existingSecret: db-credentials
  replicaCount: 1
  resources:
    limits:
      memory: 512Mi
    requests:
      memory: 448Mi
mod-organizations:
  extraEnvVars: []
  integrations: {}
  replicaCount: 1
  resources:
    limits:
      memory: 512Mi
    requests:
      memory: 448Mi
mod-organizations-storage:
  extraEnvVars: []
  integrations:
    db:
      enabled: true
      existingSecret: db-credentials
  replicaCount: 1
  resources:
    limits:
      memory: 512Mi
    requests:
      memory: 448Mi
mod-password-validator:
  extraEnvVars: []
  integrations:
    db:
      enabled: true
      existingSecret: db-credentials
  replicaCount: 1
  resources:
    limits:
      memory: 720Mi
    requests:
      memory: 649Mi
mod-patron:
  extraEnvVars: []
  integrations: {}
  replicaCount: 1
  resources:
    limits:
      memory: 512Mi
    requests:
      memory: 448Mi
mod-patron-blocks:
  extraEnvVars: []
  integrations:
    db:
      enabled: true
      existingSecret: db-credentials
  replicaCount: 1
  resources:
    limits:
      memory: 512Mi
    requests:
      memory: 448Mi
mod-permissions:
  extraEnvVars: []
  integrations:
    db:
      enabled: true
      existingSecret: db-credentials
  replicaCount: 1
  resources:
    limits:
      memory: 842Mi
    requests:
      memory: 772Mi
mod-pubsub:
  extraEnvVars: []
  integrations:
    db:
      enabled: true
      existingSecret: db-credentials
    kafka:
      enabled: true
      existingSecret: kafka-credentials
    okapi:
      enabled: true
      existingSecret: okapi-credentials
    systemuser:
      enabled: true
      existingSecret: mod-pubsub-systemuser
  replicaCount: 1
  resources:
    limits:
      memory: 768Mi
    requests:
      memory: 720Mi
mod-quick-marc:
  extraEnvVars:
  - name: REPLICATION_FACTOR
    value: '1'
  - name: NUMBER_OF_PARTITIONS
    value: '1'
  integrations:
    db:
      enabled: true
      existingSecret: db-credentials
    kafka:
      enabled: true
      existingSecret: kafka-credentials
  replicaCount: 1
  resources:
    limits:
      memory: 1144Mi
    requests:
      memory: 1088Mi
mod-reading-room:
  extraEnvVars: []
  integrations:
    db:
      enabled: true
      existingSecret: db-credentials
  replicaCount: 1
  resources:
    limits:
      memory: 422Mi
    requests:
      memory: 281Mi
mod-record-specifications:
  extraEnvVars: []
  integrations:
    db:
      enabled: true
      existingSecret: db-credentials
    kafka:
      enabled: true
      existingSecret: kafka-credentials
  resources:
    limits:
      memory: 492Mi
    requests:
      memory: 328Mi
mod-remote-storage:
  extraEnvVars: []
  integrations:
    db:
      enabled: true
      existingSecret: db-credentials
    kafka:
      enabled: true
      existingSecret: kafka-credentials
    systemuser:
      enabled: true
      existingSecret: mod-remote-storage-systemuser
  replicaCount: 1
  resources:
    limits:
      memory: 936Mi
    requests:
      memory: 846Mi
mod-requests-mediated:
  extraEnvVars: []
  integrations:
    db:
      enabled: true
      existingSecret: db-credentials
  replicaCount: 1
  resources:
    limits:
      memory: 345Mi
    requests:
      memory: 230Mi
mod-rtac:
  extraEnvVars: []
  integrations: {}
  replicaCount: 1
  resources:
    limits:
      memory: 512Mi
    requests:
      memory: 448Mi
mod-search:
  extraEnvVars:
  - name: INSTANCE_SUBJECTS_INDEXING_RETRY_ATTEMPTS
    value: '3'
  - name: INSTANCE_CONTRIBUTORS_INDEXING_RETRY_ATTEMPTS
    value: '3'
  - name: INDEXING_DATA_FORMAT
    value: json
  - name: INITIAL_LANGUAGES
    value: eng
  - name: MAX_SUPPORTED_LANGUAGES
    value: '5'
  - name: SEARCH_BY_ALL_FIELDS_ENABLED
    value: 'true'
  - name: BROWSE_CN_INTERMEDIATE_VALUES_ENABLED
    value: 'true'
  - name: BROWSE_CN_INTERMEDIATE_REMOVE_DUPLICATES
    value: 'true'
  - name: SCROLL_QUERY_SIZE
    value: '1000'
  - name: STREAM_ID_RETRY_INTERVAL_MS
    value: '1000'
  - name: STREAM_ID_RETRY_ATTEMPTS
    value: '3'
  - name: STREAM_ID_CORE_POOL_SIZE
    value: '2'
  - name: STREAM_ID_MAX_POOL_SIZE
    value: '2'
  - name: STREAM_ID_QUEUE_CAPACITY
    value: '500'
  - name: CN_BROWSE_OPTIMIZATION_ENABLED
    value: 'true'
  - name: SEARCH_QUERY_TIMEOUT
    value: 25s
  - name: MAX_BROWSE_REQUEST_OFFSET
    value: '500'
  - name: KAFKA_CONTRIBUTORS_TOPIC_PARTITIONS
    value: '2'
  - name: KAFKA_CONSORTIUM_INSTANCE_TOPIC_PARTITIONS
    value: '2'
  - name: KAFKA_SUBJECTS_TOPIC_PARTITIONS
    value: '2'
  integrations:
    db:
      enabled: true
      existingSecret: db-credentials
    kafka:
      enabled: true
      existingSecret: kafka-credentials
    okapi:
      enabled: true
      existingSecret: okapi-credentials
    opensearch:
      enabled: true
      existingSecret: opensearch-credentials
    systemuser:
      enabled: true
      existingSecret: mod-search-systemuser
  replicaCount: 1
  resources:
    limits:
      memory: 1296Mi
    requests:
      memory: 1240Mi
mod-sender:
  extraEnvVars: []
  integrations: {}
  replicaCount: 1
  resources:
    limits:
      memory: 512Mi
    requests:
      memory: 448Mi
mod-serials-management:
  extraEnvVars:
  - name: DB_MAXPOOLSIZE
    value: '50'
  integrations:
    db:
      enabled: true
      existingSecret: db-credentials
  replicaCount: 1
  resources:
    limits:
      memory: 1240Mi
    requests:
      memory: 1156Mi
mod-service-interaction:
  extraEnvVars:
  - name: DB_MAXPOOLSIZE
    value: '50'
  integrations:
    db:
      enabled: true
      existingSecret: db-credentials
    okapi:
      enabled: true
      existingSecret: okapi-credentials
  replicaCount: 1
  resources:
    limits:
      memory: 1024Mi
    requests:
      memory: 922Mi
mod-settings:
  extraEnvVars: []
  integrations:
    db:
      enabled: true
      existingSecret: db-credentials
  replicaCount: 1
  resources:
    limits:
      memory: 512Mi
    requests:
      memory: 448Mi
mod-source-record-manager:
  extraEnvVars: []
  integrations:
    db:
      enabled: true
      existingSecret: db-credentials
    kafka:
      enabled: true
      existingSecret: kafka-credentials
  replicaCount: 1
  resources:
    limits:
      memory: 2048Mi
    requests:
      memory: 1844Mi
mod-source-record-storage:
  extraEnvVars: []
  integrations:
    db:
      enabled: true
      existingSecret: db-credentials
    kafka:
      enabled: true
      existingSecret: kafka-credentials
  replicaCount: 1
  resources:
    limits:
      memory: 2048Mi
    requests:
      memory: 1844Mi
mod-tags:
  extraEnvVars: []
  integrations:
    db:
      enabled: true
      existingSecret: db-credentials
  replicaCount: 1
  resources:
    limits:
      memory: 512Mi
    requests:
      memory: 448Mi
mod-template-engine:
  extraEnvVars: []
  integrations:
    db:
      enabled: true
      existingSecret: db-credentials
  replicaCount: 1
  resources:
    limits:
      memory: 512Mi
    requests:
      memory: 448Mi
mod-tlr:
  extraEnvVars: []
  integrations:
    okapi:
      enabled: true
      existingSecret: okapi-credentials
    db:
      enabled: true
      existingSecret: db-credentials
    kafka:
      enabled: true
      existingSecret: kafka-credentials
  replicaCount: 1
  resources:
    limits:
      memory: 432Mi
    requests:
      memory: 288Mi
mod-user-import:
  extraEnvVars: []
  integrations: {}
  replicaCount: 1
  resources:
    limits:
      memory: 512Mi
    requests:
      memory: 448Mi
mod-users:
  extraEnvVars: []
  integrations:
    db:
      enabled: true
      existingSecret: db-credentials
    kafka:
      enabled: true
      existingSecret: kafka-credentials
  replicaCount: 1
  resources:
    limits:
      memory: 512Mi
    requests:
      memory: 448Mi
mod-users-bl:
  extraEnvVars: []
  integrations: {}
  replicaCount: 1
  resources:
    limits:
      memory: 512Mi
    requests:
      memory: 448Mi
mod-workflow:
  extraEnvVars: []
  integrations:
    db:
      enabled: true
      existingSecret: db-credentials
    okapi:
      enabled: true
      existingSecret: okapi-credentials
  replicaCount: 1
  resources:
    limits:
      memory: 512Mi
    requests:
      memory: 400Mi
mod-z3950:
  extraEnvVars: []
  integrations: {}
  replicaCount: 1
  resources:
    limits:
      memory: 341Mi
    requests:
      memory: 256Mi
  postJob:
    enabled: false
okapi:
  ingress:
    enabled: true
    annotations:
      alb.ingress.kubernetes.io/healthcheck-path: /_/version
      alb.ingress.kubernetes.io/listen-ports: '[{"HTTPS":443}]'
      alb.ingress.kubernetes.io/load-balancer-attributes: idle_timeout.timeout_seconds=4000
      alb.ingress.kubernetes.io/scheme: internet-facing
      alb.ingress.kubernetes.io/success-codes: 200-403
      kubernetes.io/ingress.class: alb
    hosts:
    - paths:
      - path: /*
        pathType: ImplementationSpecific
        servicePort: 9130
  service:
    type: NodePort
  replicaCount: 1
  resources:
    limits:
      memory: 842Mi
    requests:
      memory: 720Mi
  integrations:
    db:
      enabled: true
      existingSecret: db-credentials
ui-bundle:
  ingress:
    enabled: true
    annotations:
      alb.ingress.kubernetes.io/healthcheck-path: /
      alb.ingress.kubernetes.io/listen-ports: '[{"HTTPS":443}]'
      alb.ingress.kubernetes.io/scheme: internet-facing
      alb.ingress.kubernetes.io/success-codes: 200-399
      kubernetes.io/ingress.class: alb
    hosts:
    - paths:
      - path: /*
        pathType: ImplementationSpecific
        servicePort: 80
  service:
    type: NodePort
  replicaCount: 1
  resources:
    limits:
      memory: 96Mi
    requests:
      memory: 64Mi
mod-consortia-keycloak:
  extraEnvVars:
    - name: CUSTOM_FIELDS_RETRY_BACKOFF_DELAY
      value: '5000'
    - name: CUSTOM_FIELDS_RETRY_MAX_RETRIES
      value: '5'
    - name: SERVER_PORT
      value: '8080'
  integrations:
    db:
      enabled: true
      existingSecret: db-credentials
    kafka:
      enabled: true
      existingSecret: kafka-credentials
    okapi:
      enabled: true
      existingSecret: okapi-credentials
    systemuser:
      enabled: true
      existingSecret: mod-consortia-keycloak-systemuser
  replicaCount: 1
  resources:
    limits:
      memory: 1Gi
    requests:
      memory: 256Mi
