image:
  repository: ${image_repository}
  tag: "${image_tag}"
extraEnvVars:
  - name: FAR_MODE
    value: "true"
  - name: KONG_INTEGRATION_ENABLED
    value: "false"
  - name: OKAPI_INTEGRATION_ENABLED
    value: "false"
  - name: KC_INTEGRATION_ENABLED
    value: "false"
  - name: SECURITY_ENABLED
    value: "false"
extraJavaOpts:
%{ for opt in extra_java_opts ~}
  - "${opt}"
%{ endfor ~}
integrations:
  db:
    enabled: true
    existingSecret: "${db_secret_name}"
resources:
  limits:
    memory: ${memory_limit}
  requests:
    memory: ${memory_request}
autoscaling:
  enabled: ${autoscaling_enabled}
  minReplicas: ${autoscaling_min_replicas}
  maxReplicas: ${autoscaling_max_replicas}
  targetMemoryUtilizationPercentage: ${autoscaling_target_memory_utilization}
pdb:
  enabled: true
  maxUnavailable: 1
service:
  type: NodePort
ingress:
  enabled: true
  annotations:
    alb.ingress.kubernetes.io/group.name: rancher
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/target-group-attributes: deregistration_delay.timeout_seconds=30
    alb.ingress.kubernetes.io/healthcheck-path: /admin/health
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS": 443}]'
    alb.ingress.kubernetes.io/ssl-redirect: "443"
    alb.ingress.kubernetes.io/load-balancer-attributes: idle_timeout.timeout_seconds=4000
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/success-codes: 200-399
    kubernetes.io/ingress.class: alb
  hosts:
  - host: "${domain_name}"
    paths:
    - path: /*
      pathType: ImplementationSpecific
      servicePort: 80
readinessProbe:
  httpGet:
    path: /admin/health
    port: http
  initialDelaySeconds: 30
  periodSeconds: 10
livenessProbe:
  httpGet:
    path: /admin/health
    port: http
  initialDelaySeconds: 30
  periodSeconds: 10
