#!groovy
import org.folio.models.RancherNamespace
import org.folio.rest_v2.Main
import org.jenkinsci.plugins.workflow.libs.Library
import org.folio.jenkins.JenkinsAgentLabel
import org.folio.jenkins.PodTemplates

@Library('pipelines-shared-library@RANCHER-2236') _

properties([
  buildDiscarder(logRotator(numToKeepStr: '30')),
  disableConcurrentBuilds(),
  parameters([
    folioParameters.cluster(),
    folioParameters.namespace(),
    folioParameters.refreshParameters()])
])

if (params.REFRESH_PARAMETERS) {
  currentBuild.result = 'ABORTED'
  error('DRY RUN BUILD, PARAMETERS REFRESHED!')
}

RancherNamespace namespace = new RancherNamespace(params.CLUSTER, params.NAMESPACE)
  .withSuperTenantAdminUser()

Main main = new Main(this, namespace.getDomains()['okapi'], namespace.getSuperTenant())


ansiColor('xterm') {
  PodTemplates podTemplates = new PodTemplates(this)

  podTemplates.defaultTemplate {
    node(JenkinsAgentLabel.DEFAULT_AGENT.getLabel()) {
      try {
        stage('Ini') {
          buildName "${namespace.getClusterName()}-${namespace.getNamespaceName()}.${env.BUILD_ID}"
          namespace.setSuperTenantLocked(main.isTenantLocked(namespace.getSuperTenant()))
        }
        stage("Unlock Supertenant") {
          if (namespace.getSuperTenantLocked()) {
            main.unlockSuperTenant(namespace.getSuperTenant())
            println("SuperTenant was successfully unlocked!")
          } else {
            println("SuperTenant already unlocked!")
          }
        }
      } catch (exception) {
        println(exception)
        error(exception.getMessage())
      }
    }
  }
}
