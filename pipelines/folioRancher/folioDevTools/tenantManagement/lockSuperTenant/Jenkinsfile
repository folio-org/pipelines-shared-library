#!groovy
import org.folio.jenkins.PodTemplates
import org.folio.models.RancherNamespace
import org.folio.rest_v2.Main
import org.jenkinsci.plugins.workflow.libs.Library

@Library('pipelines-shared-library') _

properties([
  buildDiscarder(logRotator(numToKeepStr: '30')),
  disableConcurrentBuilds(),
  parameters([
    folioParameters.cluster(),
    folioParameters.namespace(),
    folioParameters.refreshParameters()])
])

if (params.REFRESH_PARAMETERS) {
  currentBuild.result = 'ABORTED'
  error('DRY RUN BUILD, PARAMETERS REFRESHED!')
}
PodTemplates podTemplates = new PodTemplates(this)

RancherNamespace namespace = new RancherNamespace(params.CLUSTER, params.NAMESPACE)
  .withSuperTenantAdminUser()

Main main = new Main(this, namespace.getDomains()['okapi'], namespace.getSuperTenant())

ansiColor('xterm') {
  podTemplates.rancherAgent {
    try {
      stage('Ini') {
        buildName "${params.CLUSTER}-${params.NAMESPACE}.${env.BUILD_ID}"

        namespace.setSuperTenantLocked(main.isTenantLocked(namespace.getSuperTenant()))
      }
      stage("Lock Supertenant") {
        if (!namespace.getSuperTenantLocked()) {
          main.lockSuperTenant(namespace.getSuperTenant())
          println("SuperTenant was successfully locked!")
        } else {
          println("SuperTenant already locked!")
        }
      }
    } catch (exception) {
      println(exception)
      error(exception.getMessage())
    }
  }
}
