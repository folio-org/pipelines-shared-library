#!groovy
import org.folio.Constants
import org.folio.models.Index
import org.folio.models.InstallRequestParams
import org.folio.models.OkapiConfig
import org.folio.models.OkapiTenant
import org.folio.models.RancherNamespace
import org.folio.models.SmtpConfig
import org.folio.models.TenantUi
import org.folio.rest.GitHubUtility
import org.folio.rest_v2.Main
import org.folio.utilities.RestClient
import org.jenkinsci.plugins.workflow.libs.Library


@Library('pipelines-shared-library@RANCHER-837') _

CONFIG_BRANCH = 'RANCHER-837'

properties([
  buildDiscarder(logRotator(numToKeepStr: '30')),
  disableConcurrentBuilds(),
  parameters([
      folioParameters.cluster(),
      folioParameters.namespace(),
      folioParameters.referenceTenantId(),
      folioParameters.tenantId(''),
      string(name: 'TENANT_NAME', defaultValue: '', description: "New tenant name"),
      string(name: 'TENANT_DESCRIPTION', defaultValue: '', description: "New tenant Description"),
      folioParameters.loadReference(),
      folioParameters.loadSample(),
      folioParameters.agent(),
      folioParameters.refreshParameters()
  ])
])

String defaultTenantId = 'supertenant'

if (params.REFRESH_PARAMETERS) {
  currentBuild.result = 'ABORTED'
  return
}

RestClient client = new RestClient(this)

ansiColor('xterm') {
  node(params.AGENT) {
    stage('[Primary testing start]'){
      folioHelm.withK8sClient {
        Map headers = [
          "Content-Type": "application/json",
          'X-Okapi-Tenant': 'supertenant',
          'X-Okapi-Token': 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJzdXBlcl9hZG1pbiIsInR5cGUiOiJsZWdhY3ktYWNjZXNzIiwidXNlcl9pZCI6ImY1ZDVjY2RlLWE1OTEtNGE5YS05MTVlLTBkMzdmZTIwZDNhNSIsImlhdCI6MTcwMzE2NDQ5MCwidGVuYW50Ijoic3VwZXJ0ZW5hbnQifQ.TxaWr21j8dS3pZlAmpQMCHMlSBsQw5vCwJlZAiWz3X8'
        ]
        String URL = "https://${params.CLUSTER}-${params.NAMESPACE}-okapi.${Constants.CI_ROOT_DOMAIN}/_/version"
        def res = client.get("${URL}", headers)
        println(res)
      }
    }
  }
}
