#!groovy

@Library('pipelines-shared-library@RANCHER-1154') _

import org.folio.models.OkapiTenant
import org.folio.models.RancherNamespace
import org.folio.rest_v2.Main
import org.folio.rest_v2.Okapi
import org.jenkinsci.plugins.workflow.libs.Library


properties([
  buildDiscarder(logRotator(numToKeepStr: '30')),
  disableConcurrentBuilds(),
  parameters([
    folioParameters.cluster(),
    folioParameters.namespace(),
    folioParameters.tenantId(''),
    folioParameters.agent(),
    folioParameters.refreshParameters()])
])

RancherNamespace namespace = new RancherNamespace(params.CLUSTER, params.NAMESPACE)
  .withSuperTenantAdminUser()

Main main = new Main(this, namespace.getDomains()['okapi'], namespace.getSuperTenant())

OkapiTenant tenant = new OkapiTenant(params.TENANT_ID)
  .withInstallJson(main.getInstallJson(params.TENANT_ID))



//List tenantModuleList = namespace.getModules(main.getInstallJson(params.TENANT_ID))
println tenant

  ansiColor('xterm') {
    if (params.REFRESH_PARAMETERS) {
      currentBuild.result = 'ABORTED'
      error('DRY RUN BUILD, PARAMETERS REFRESHED!')
    }
    node(params.AGENT) {
      try {
        stage("Disable tenant modules") {
          pass
        }
        stage("Delete tenant") {
//          okapi.deleteTenant(tenant)
          pass
        }
      } catch (exception) {
        println(exception)
        error(exception.getMessage())
      } finally {
        stage('Cleanup') {
          cleanWs notFailBuild: true
        }
      }
    }
  }


