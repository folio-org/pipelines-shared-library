#!groovy
package folioRancher.folioDevTools.userManagement.unlockPgAdmin

import org.folio.Constants
import org.folio.jenkins.PodTemplates
import org.folio.utilities.Logger
import org.jenkinsci.plugins.workflow.libs.Library

@Library('pipelines-shared-library') _

properties([
  buildDiscarder(logRotator(numToKeepStr: '30')),
  disableConcurrentBuilds(),
  parameters([
          folioParameters.cluster(),
          folioParameters.namespace(),
          folioParameters.refreshParameters()
  ])
])

if (params.REFRESH_PARAMETERS) {
  currentBuild.result = 'ABORTED'
  return
}

PodTemplates podTemplates = new PodTemplates(this)
Logger logger = new Logger(this, env.JOB_BASE_NAME)

ansiColor('xterm') {
  podTemplates.rancherAgent {
    stage('Ini') {
      buildName "Unlock pgAdmin.${env.BUILD_NUMBER}"
      buildDescription "${params.CLUSTER}-${params.NAMESPACE}"
    }

    stage('Checkout') {
      checkout scm
    }

    stage('[FIX] pgAdmin unlock') {
      logger.info("Unlocking pgAdmin")
      folioHelm.withKubeConfig(params.CLUSTER) {
        sh(script: "set +x && helm get values pgadmin4 --namespace ${params.NAMESPACE} | tail -n +2 > /tmp/values.yml", returnStdout: false)
        sh(script: "set +x && helm repo add fix https://helm.runix.net", returnStdout: false)
        sh(script: "set +x && helm uninstall pgadmin4 --namespace ${params.NAMESPACE} --wait", returnStdout: false)
        sh(script: "set +x && helm install pgadmin4 fix/pgadmin4 --namespace ${params.NAMESPACE} -f /tmp/values.yml --wait", returnStdout: false)
      }
    }
  }
}
