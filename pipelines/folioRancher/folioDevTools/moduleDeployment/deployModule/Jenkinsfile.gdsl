package folioRancher.folioDevTools.moduleDeployment.deployModule

import org.jenkinsci.plugins.workflow.libs.Library

// TODO: get back to RANCHER-1334 branch once development is done
@Library('pipelines-shared-library@RANCHER-2026') _

/** Job properties and parameters */
properties([
  buildDiscarder(logRotator(numToKeepStr: '30')),
  disableConcurrentBuilds(),
  parameters([
    folioParameters.moduleName(),         // Folio Module name, MODULE_NAME
    folioParameters.refreshParameters()
  ])
])

/** Refresh pipeline parameters */
if (params.REFRESH_PARAMETERS) {
  currentBuild.result = 'ABORTED'
  return
}

String agentLabel = 'jenkins-agent-java17'
String imageRepoName = 'folioci'
String moduleName = 'mod-data-export'
String numOfTagsToShow = '100'
String pickImageTagNames = 'jq -r \'.results[].name|select(. != \"latest\")\''

GString getContainerImageTags = "curl -s -X GET \'https://hub.docker.com/v2/repositories/${imageRepoName}/${params.MODULE_NAME}/tags?page_size=${numOfTagsToShow}\'| ${pickImageTagNames}"

pipeline {
  agent {label agentLabel}

  stages {
    stage('Get Image Tags') {
      steps {
        sh label: "Get Container Image Tags for ${moduleName} module", returnStdout: false, script: getContainerImageTags
      }
    }
  }
}
