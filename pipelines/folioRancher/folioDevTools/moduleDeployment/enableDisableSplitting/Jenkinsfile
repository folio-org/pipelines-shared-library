#!groovy
package folioRancher.folioDevTools.moduleDeployment.enableDisableSplitting

import org.folio.Constants
import org.folio.jenkins.PodTemplates
import org.folio.utilities.Logger
import org.jenkinsci.plugins.workflow.libs.Library

@Library('pipelines-shared-library@RANCHER-2236') _

properties([
  buildDiscarder(logRotator(numToKeepStr: '30')),
  disableConcurrentBuilds(),
  parameters([
          folioParameters.cluster(),
          folioParameters.namespace(),
          booleanParam(name: 'ENABLE_DI_SPLITTING', defaultValue: false, description: 'Check this option for enabling DI splitting'),
          booleanParam(name: 'DISABLE_DI_SPLITTING', defaultValue: false, description: 'Check this option for disabling DI splitting'),
          folioParameters.refreshParameters()
  ])
])

if (params.REFRESH_PARAMETERS) {
  currentBuild.result = 'ABORTED'
  return
}

PodTemplates podTemplates = new PodTemplates(this)
Logger logger = new Logger(this, env.JOB_BASE_NAME)

ansiColor('xterm') {
  podTemplates.rancherAgent {
    stage('Ini') {
      buildName "DI config: ${params.ENABLE_DI_SPLITTING ? 'enable' : 'disable'}"
      buildDescription "${params.CLUSTER}-${params.NAMESPACE}"
    }

    stage('Checkout') {
      checkout scm
    }

    stage('[FIX] module DB schema by reinstall') {
      logger.info("Handling DI config: ${params.ENABLE_DI_SPLITTING ? 'enable' : 'disable'} action")
      folioHelm.withKubeConfig(params.CLUSTER) {
        if (params.ENABLE_DI_SPLITTING) {
          logger.info('Enabling DI splitting')
          sh(script: "kubectl set env deployment/mod-data-import SPLIT_FILES_ENABLED=true --namespace ${params.NAMESPACE}", returnStdout: true)
        } else {
          logger.info('Disabling DI splitting')
          sh(script: "kubectl set env deployment/mod-data-import SPLIT_FILES_ENABLED=false --namespace ${params.NAMESPACE}", returnStdout: true)
        }
      }
    }
  }
}
