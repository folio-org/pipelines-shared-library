#!groovy

import org.folio.Constants
import org.folio.rest.model.OkapiTenant
import org.folio.utilities.model.Project
import org.folio.utilities.model.Module
import org.jenkinsci.plugins.workflow.libs.Library

@Library('pipelines-shared-library@RANCHER-835') _

properties([
    buildDiscarder(logRotator(numToKeepStr: '30')),
    disableConcurrentBuilds(),
    parameters([
        folioParameters.cluster(),
        folioParameters.namespace(),
        folioParameters.uiBundleTag(),
        folioParameters.uiBundleBuild(),
        folioParameters.repository(),
        folioParameters.branch(),
        folioParameters.tenantId(),
        folioParameters.agent(),
        folioParameters.refreshParameters()
    ])
])

if (params.REFRESH_PARAMETERS) {
    currentBuild.result = 'ABORTED'
    return
}

ansiColor('xterm') {
    common.refreshBuidParameters(params.refresh_parameters)
    node(params.AGENT) {
        stage('Ini') {
            buildName "${params.CLUSTER}.${env.BUILD_ID}"
            buildDescription ""
        }

        stage('Checkout') {
          checkout scm
        }

        stage('UI Build') {
            if (params.ui_bundle_build) {
                def folioParameters = [
                    folio_repository    : params.folio_repository,
                    folio_branch        : params.folio_branch,
                    rancher_cluster_name: project_config.getClusterName(),
                    rancher_project_name: project_config.getProjectName(),
                    tenant_id           : tenant.getId(),
                    custom_hash         : project_config.getHash(),
                    custom_url          : "https://${project_config.getDomains().okapi}",
                    custom_tag          : ui_bundle.getUiBundleTag()
                ]
                folioUI.build(folioParameters)
            }
        }

}
}
