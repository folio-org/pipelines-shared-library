#!groovy
import org.jenkinsci.plugins.workflow.libs.Library

@Library('pipelines-shared-library') _

properties([
  //pipelineTriggers([cron('H 0 * * 1-6')]), //TODO Disabled by Mriya team request for BugFest period
  buildDiscarder(logRotator(numToKeepStr: '30')),
  disableConcurrentBuilds(),
  parameters([
    string(name: 'CYPRESS_BUGFEST_BRANCH', defaultValue: 'quesnelia', description: "(Required) Insert what 'stripes-testing' branch use for build"),
    folioParameters.agent(),
    folioParameters.refreshParameters()
  ])
])

if (params.REFRESH_PARAMETERS) {
  currentBuild.result = 'ABORTED'
  return
}

Map cypressBugfestFlowParameters = [
  customBuildName         : env.JOB_BASE_NAME,
  branch                  : params.CYPRESS_BUGFEST_BRANCH,
  tenantUrl               : "https://bugfest-quesnelia-aqa.int.aws.folio.org",
  okapiUrl                : "https://okapi-bugfest-quesnelia-aqa.int.aws.folio.org",
  tenantId                : 'fs09000003',
  adminUsername           : 'folio-aqa',
  adminPassword           : 'Folio-aqa1',
  parallelExecParameters  : '--env grepTags="smoke criticalPth extendedPath"',
//  sequentialExecParameters: '--env grepTags="smoke+nonParallel criticalPth+nonParallel extendedPath+nonParallel"',
  testsTimeout            : '14',
  testrailProjectID       : '14',
  testrailRunID           : '2421',
  numberOfWorkers         : '6',
  agent                   : 'cypress-static',
  useReportPortal         : 'false'
]

ansiColor('xterm') {
  node(params.AGENT) {
    stage('Ini') {
      buildName env.BUILD_ID
      buildDescription "Branch: ${params.CYPRESS_BUGFEST_BRANCH}\nEnv: ${cypressBugfestFlowParameters.tenantUrl}"
      cleanWs()
    }

    stage('[Flow] Execute tests') {
      folioCypressFlow(cypressBugfestFlowParameters)
    }
  }
}
