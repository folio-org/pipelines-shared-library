#!groovy
package folioRancher.folioEureka.DockerImages

import org.folio.eurekaImage.eurekaImage
import org.jenkinsci.plugins.workflow.libs.Library

@Library('pipelines-shared-library@RANCHER-1502') _

properties([
  buildDiscarder(logRotator(numToKeepStr: '30')),
  disableConcurrentBuilds(),
  parameters([
    folioParameters.agent(),
    folioParameters.refreshParameters()
  ])
])

if (params.REFRESH_PARAMETERS) {
  currentBuild.result = 'ABORTED'
  return
}

ansiColor('xterm') {
  node(params.AGENT) {
    try {
      stage('Build Docker Image'){
        dir('folio-kong'){
          eurekaImage image = new eurekaImage(this)
          image.setModuleName('folio-kong')
          image.makeImage()
        }
      }
    } catch (e) {
      println("Caught exception: ${e}")
      error(e.getMessage())
    } finally {
      stage('Cleanup') {
        println("Workspace size: ${sh(returnStdout: true, script: 'du -sh .').trim()}")
        input("Paused for a review...")
        cleanWs notFailBuild: true
      }
    }
  }
}
