/**
 * This is a common template for folio pipelines
 */

#!groovy

import org.folio.jenkins.PodTemplates
import org.folio.utilities.Logger
import org.jenkinsci.plugins.workflow.libs.Library

@Library('pipelines-shared-library') _

/**
 * Job properties and parameters
 */
properties([
  buildDiscarder(logRotator(numToKeepStr: '30')),
  disableConcurrentBuilds(),
  parameters([
    /**
     *  Placeholder for job parameters
     *  */
    folioParameters.refreshParameters()
  ])
])

if (params.REFRESH_PARAMETERS) {
  currentBuild.result = 'ABORTED'
  return
}

if (params.CLUSTER == 'folio-testing') {
  folioCommon.kitfoxApproval()
}

/**
 * Job variables
 */
PodTemplates podTemplates = new PodTemplates(this)
Logger logger = new Logger(this, env.JOB_BASE_NAME)

/**
 * Pipeline
 */
ansiColor('xterm') {
  podTemplates.rancherAgent {
    try {
      stage('Ini') {
        buildName('')
        buildDescription('')
      }
      /**
       * Placeholder for stages
       */
    } catch (e) {
      logger.warning("Caught exception: ${e}")
      error(e.getMessage())
    }
  }
}
